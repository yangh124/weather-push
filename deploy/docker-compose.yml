# 挂载卷
volumes:
  db-data:
  redis-data:
  rabbitmq-data:
services:
  weather-push:
    image: weather-push:latest # 构建后的镜像名称
    container_name: weather-push # 容器名称
    ports:
      - "8080:8080" # 映射容器的 8080 端口到主机的 8080 端口
    environment:
      - ENCRYPT=${ENCRYPT} # 传递环境变量
    depends_on:
      - mysql # 如果有数据库依赖，确保数据库先启动
      - redis
  weather-push-admin:
    image: weather-push-admin:lastest
    container_name: nginx
    ports:
      - 80:80
  mysql:
    # 镜像名
    image: mysql:8.0
    # 容器名(以后的控制都通过这个)
    container_name: mysql8.0
    # 重启策略
    restart: unless-stopped
    privileged: true
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      # root 密码
      MYSQL_ROOT_PASSWORD: root
    # 映射端口
    ports:
      - 3306:3306
    volumes:
      # 数据挂载
      - db-data:/var/lib/mysql/
      # 配置挂载
      - db-data:/etc/mysql/conf.d/
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1
  redis:
    image: redis:latest
    container_name: redis
    privileged: true
    command: redis-server --appendonly yes --requirepass "root"
    volumes:
      - redis-data:/data #数据文件挂载
    ports:
      - 6379:6379
    environment:
      TZ: Asia/Shanghai
